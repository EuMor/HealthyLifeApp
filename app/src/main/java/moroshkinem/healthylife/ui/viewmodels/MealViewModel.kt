package moroshkinem.healthylife.ui.viewmodels

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import kotlinx.coroutines.flow.*
import kotlinx.coroutines.launch
import moroshkinem.healthylife.data.model.Meal
import moroshkinem.healthylife.data.repos.MealRepository
import java.time.LocalDate
import java.time.format.DateTimeFormatter

class MealViewModel(
    private val mealRepository: MealRepository
) : ViewModel() {

    // üîπ –ö–∞–ª–æ—Ä–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
    val todayCalories: StateFlow<Int> =
        mealRepository.getTodayCaloriesFlow()
            .stateIn(
                scope = viewModelScope,
                started = SharingStarted.WhileSubscribed(5000),
                initialValue = 0
            )

    // üîπ –°–ø–∏—Å–æ–∫ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –∑–∞ –Ω–µ–¥–µ–ª—é (–¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤/—Å–ø–∏—Å–∫–∞)
    val weeklyMeals: StateFlow<List<Meal>> =
        mealRepository.getThisWeekMealsFlow()
            .stateIn(
                scope = viewModelScope,
                started = SharingStarted.WhileSubscribed(5000),
                initialValue = emptyList()
            )

    // üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
    fun addMeal(calories: Int, description: String?) {
        viewModelScope.launch {
            mealRepository.addMeal(calories, description)
        }
    }
}